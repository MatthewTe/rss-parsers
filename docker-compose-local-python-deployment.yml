#volumes:
#  prometheus-data:
#    driver: local
#  grafana-data:
#    driver: local
#
networks:
  local_microservice_network:
  loki:


services:

  # Logging system - promtail push to locally deployed grafana: 
  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./src/logger/loki_stack/loki:/etc/loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/loki-dev-config.yml
    networks:
      - loki

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./src/logger/logger_python/logs:/var/log
      - ./src/logger/loki_stack/promtail:/etc/promtail
    command: -config.file=/etc/promtail/promtail-dev-config.yml
    networks:
      - loki

  grafana:
    image: grafana/grafana:latest
    user: "80" 
    volumes:
      - ./src/logger/loki_stack/grafana:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - loki

  mysql:
    container_name: dev_mysql
    restart: always
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: 'password' 
      MYSQL_USER: 'username'
      MYSQL_PASS: 'password'
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./configs/schema.sql:/docker-entrypoint-initdb.d/1.sql
      - ./configs/data.sql:/docker-entrypoint-initdb.d/2.sql
    ports:
      - "3306:3306"

  article_scheduler:
    build:
      context: ./src/article_scheduler/
      dockerfile: Dockerfile.python
    ports:
      - 80:80
    volumes:
      - ./src/article_scheduler/app/:/app/
    env_file:
      - .env

  snowflake:
    build:
      context: ./src/snowflake/
      dockerfile: Dockerfile.python
    volumes:
      - ./src/snowflake/snowflake_python/:/app/snowflake_python/
    ports:
      - "81:8000"
    env_file:
      - .env

  article_ingestor:
    build:
      context: ./src/article_ingestor/
      dockerfile: Dockerfile.python
    volumes:
      - ./src/article_ingestor/article_ingestor_python/:/app/article_ingestor_python/
    ports:
      - 82:8000
    env_file:
      - .env
    networks:
      - local_microservice_network

  storage_bucket_uploader:
    build:
      context: ./src/static_file_ingestor/
      dockerfile: Dockerfile.python
    volumes:
      - ./src/static_file_ingestor/static_file_ingestor_python/:/app/static_file_ingestor_python/
    ports:
      - 83:8000
    env_file:
      - .env
    networks:
      - local_microservice_network

  logger:
    build:
      context: ./src/logger/
      dockerfile: Dockerfile.python
    volumes:
      - ./src/logger/logger_python/:/app/logger_python/
      - ./src/logger/logger_python/logs:/logs/

    env_file:
      - .env

  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - 9090:9090 
      - 9000:9000
    command: 'server /data --console-address ":9090"'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    networks:
      - local_microservice_network
    volumes:
      - minio_static:/data

volumes:
  minio_static:

